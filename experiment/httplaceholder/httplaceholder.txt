requestId:{ endpoint = "/ph-api/configuration"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "path"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "configKeyType"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["Authentication"; "Web"; "Storage"; "Gui";
                                  "Stub"; "Configuration"; "Development"], None)
               defaultValue = "Authentication"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "value"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/configuration"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "input" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "configurationKey"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "newValue"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/export/requests/{requestId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "requestId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "type" 
 payload = LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("type", String,
                                 ["NotSet"; "Curl"; "Hurl"; "Har"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "requestExportType"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Curl"; "Hurl"; "Har"],
                                 None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "result"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/import/curl"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "doNotCreateStub" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "stubIdPrefix" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "input" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/import/har"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "doNotCreateStub" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "stubIdPrefix" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "input" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/import/openapi"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "doNotCreateStub" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "stubIdPrefix" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "input" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/metadata"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "version"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "runtimeVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "variableHandlers"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fullName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "example"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "examples"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/metadata/features/{featureFlag}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "featureFlag" 
 payload = LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("featureFlag", String, ["Authentication"], None)
               defaultValue = "Authentication"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "featureFlag"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType = Enum ("", String, ["Authentication"], None)
               defaultValue = "Authentication"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [ {name = "x-from-identifier" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "x-items-per-page" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "correlationId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "requestParameters"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "method"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "body"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "bodyIsBinary"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "stubExecutionResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "stubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "passed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "checkerName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "conditionValidation"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "stubResponseWriterResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "responseWriterName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "executed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "executingStubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "stubTenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestBeginTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestEndTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hasResponse"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests/overview"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [ {name = "x-from-identifier" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "x-items-per-page" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "correlationId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "method"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "executingStubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "stubTenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestBeginTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestEndTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hasResponse"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests/{correlationId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "correlationId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "correlationId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "requestParameters"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "method"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "body"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "bodyIsBinary"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "stubExecutionResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "stubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "passed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "checkerName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "conditionValidation"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "stubResponseWriterResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "responseWriterName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "executed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "executingStubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "stubTenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestBeginTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestEndTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hasResponse"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests/{correlationId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "correlationId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests/{correlationId}/response"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "correlationId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "body"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "bodyIsBinary"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/requests/{correlationId}/stubs"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "correlationId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "input" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "doNotCreateStub"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scenarios"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "state"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hitCount"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scenarios"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scenarios/{scenario}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "scenario" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "state"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hitCount"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scenarios/{scenario}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "scenario" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "scenarioState" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "state"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hitCount"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scenarios/{scenario}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "scenario" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scheduledJob/{jobName}"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "jobName" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/scheduledJob"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "stub" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/multiple"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "stubs" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/{stubId}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "stubId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "stub" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/{stubId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "stubId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/{stubId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "stubId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/overview"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/stubs/{stubId}/requests"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "stubId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "correlationId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "requestParameters"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "method"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "body"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "bodyIsBinary"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "stubExecutionResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "stubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "passed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "checkerName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "conditionValidation"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "stubResponseWriterResults"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "responseWriterName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "executed"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "log"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "executingStubId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "stubTenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestBeginTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "requestEndTime"
  payload = Fuzzable { primitiveType = DateTime
                       defaultValue = "RESTlerDateTime"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "hasResponse"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/tenants"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/tenants/{tenant}/stubs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "stub"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "metadata"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "readOnly"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "filename"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/tenants/{tenant}/stubs"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/tenants/{tenant}/stubs"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "tenant" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "stubs" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "conditions"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "method"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "url"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "path"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "query"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "fullPath"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "isHttps"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "body"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "form"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "value"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] );
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "xpath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "queryString"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "namespaces"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "jsonPath"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "basicAuthentication"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "clientIp"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "host"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "json"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "minHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "maxHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "exactHits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 InternalNode ({ name = "response"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "enableDynamicMode"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "statusCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "contentType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "base64"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "file"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "textFile"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "headers"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "extraDuration"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "json"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "xml"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "html"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "temporaryRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "permanentRedirect"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "movedPermanently"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "reverseProxy"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendQueryString"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "appendPath"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceRootUrl"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "lineEndings"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String, ["NotSet"; "Windows"; "Unix"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "image"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = "type"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload =
           Fuzzable
             { primitiveType =
                              Enum
                                ("", String,
                                 ["NotSet"; "Jpeg"; "Bmp"; "Png"; "Gif"], None)
               defaultValue = "NotSet"
               exampleValue = None
               parameterName = None
               dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 LeafNode { name = "width"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "height"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "backgroundColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontSize"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "fontColor"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jpegQuality"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "wordWrap"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 InternalNode ({ name = "scenario"
  payload = None
  propertyType = Property
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "setScenarioState"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "clearState"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] );
 LeafNode { name = "abortConnection"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "replace"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = "text"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "ignoreCase"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "regex"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "jsonPath"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "replaceWith"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "priority"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "tenant"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "description"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "enabled"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "scenario"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/ph-api/users/{username}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "username" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "username"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
